[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "demonology-cli"
version = "0.1.0"
description = "A mystical terminal interface for local LLM interaction"
authors = [
    {name = "Demonology Development Team", email = "demonology@example.com"},
]
license = {text = "MIT"}
readme = "README.md"
keywords = ["llm", "cli", "terminal", "ai", "chat", "llama", "local"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Environment :: Console",
]
requires-python = ">=3.8"
dependencies = [
    "httpx>=0.25.0",
    "rich>=13.0.0",
    "click>=8.0.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "isort>=5.10.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "httpx[test]>=0.25.0",
]

[project.urls]
Homepage = "https://github.com/demonology-dev/demonology-cli"
Documentation = "https://github.com/demonology-dev/demonology-cli/wiki"
Repository = "https://github.com/demonology-dev/demonology-cli"
"Bug Tracker" = "https://github.com/demonology-dev/demonology-cli/issues"

[project.scripts]
demonology = "demonology.cli:main"

# ---- FIXED PACKAGE DISCOVERY ----
# Find the 'demonology' package in the current project root.
[tool.setuptools.packages.find]
where = ["."]
include = ["demonology*"]

[tool.setuptools.package-data]
"demonology" = ["*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["demonology"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

